@use "sass:math";

// Media Queries

@function get-breakpoint( $width-or-breakpoint, $is-min-width: false ) {
	$mapped-breakpoint: map-get( $breakpoints, $width-or-breakpoint );
	@if $mapped-breakpoint != null {
		$breakpoint-size: map-get( $mapped-breakpoint, width );
		@if $breakpoint-size != null {
			@if $is-min-width {
				$breakpoint-size: $breakpoint-size + 1;
			}
			@return ( $breakpoint-size + map-get( $mapped-breakpoint, unit ) );
		}
	}
	@return $width-or-breakpoint;
}

@mixin media( $max-width-or-breakpoint ) {
	@media only screen and ( max-width: get-breakpoint( $max-width-or-breakpoint ) ) {
		@content;
	}
}

@mixin media-min( $min-width-or-breakpoint ) {
	@media only screen and ( min-width: get-breakpoint( $min-width-or-breakpoint, true ) ) {
		@content;
	}
}

@mixin hi-dpi( $ratio: 1.3 ) {
	@media only screen and ( -webkit-min-device-pixel-ratio: $ratio ),
		only screen and ( min--moz-device-pixel-ratio: $ratio ),
		only screen and ( -o-min-device-pixel-ratio: #{$ratio} / 1 ),
		only screen and ( min-resolution: round( $ratio * 96dpi ) ),
		only screen and ( min-resolution: $ratio * 1dppx ) {
			@content;
	}
}


// Flex Container

%flex-container {
	position: relative;
	height: 0;
	overflow: hidden;
	iframe,
	object {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}

@mixin flex-container( $width-ratio, $height-ratio ) {
	@extend %flex-container;
	padding-bottom: math.percentage( math.div( $height-ratio, $width-ratio ) );
}


// Typography

@mixin font-size( $size ) {
	font-size: nth( map-get( $typography-sizes, $size ), 1 ) * 1rem;
}

@mixin line-height( $size ) {
	$typography-size: map-get( $typography-sizes, $size );
	@if length( $typography-size ) < 2 {
		line-height: nth( map-get( $typography-sizes, theta ), 2 );
	} @else {
		line-height: nth( $typography-size, 2 );
	}
}

@mixin type( $size ) {
	@include font-size( $size );
	@include line-height( $size );
}


// Form placeholders

@mixin placeholder() {
	&::-webkit-input-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
	&::placeholder {
		@content;
	}
}

// Focus states

@mixin focus() {
	.js & {
		&:focus {
			&:not( .focus-visible ) {
				@content;
			}
		}
	}
}
